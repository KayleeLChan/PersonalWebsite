// import functions and variables
@import "../node_modules/bootstrap/scss/_functions";
@import "../node_modules/bootstrap/scss/_variables";
@import '../node_modules/bootstrap/scss/mixins';

// custom colours
$primary-black: #251F22;
$dark-pink: #713D54;
$medium-pink: #9F5E70;
$primary-pink: #BB808A;
$light-pink: #D59697;
$primary-green: #94DD97;
$light-green: #E5FFE6;
$primary-white: #FCF6F8;

// merge custom colours into bootstrap's default theme colours
$brand-colours: (
    "primary-black": rgba($primary-black, 1),
    "dark-pink": rgba($dark-pink, 1),
    "medium-pink": rgba($medium-pink, 1),
    "primary-pink": rgba($primary-pink, 1),
    "light-pink": rgba($light-pink, 1),
    "primary-green": rgba($primary-green, 1),
    "light-green": rgba($light-green, 1),
    "primary-white": rgba($primary-white, 1),
);
$theme-colors: map-merge($brand-colours, $theme-colors);

[data-bs-theme="custom"] {
    // Custom Colours
    --bs-body-bg: #{$medium-pink};
    --bs-body-color: #{$primary-white};
    --bs-heading-color: #{$primary-white};
    --bs-body-color-rgb: #{to-rgb($light-pink)};
    --bs-body-bg-rgb: #{to-rgb($primary-pink)};
    --bs-tertiary-bg: #{$primary-green};
    --bs-border-color: #{$primary-white};
    --bs-secondary-bg: #{$medium-pink};
    --bs-link-color-rgb: #{$primary-green};
    --bs-link-hover-color-rgb: #{$light-green};
    --bs-tertiary-bg-rgb: #{$dark-pink};

    .main {
        display: flex;
        justify-content: center;
        padding: 3rem 0 3rem 0;
    }

    p {
        color: var(--bs-body-color);
    }

    p a {
        display: inline-block;
    }

    footer {
        z-index: 4;
    }

    .navbar {
        flex-wrap: nowrap !important;
        position: sticky;
        top: 0;
        z-index: 4;
    }

    .nav-link {
        color: #{$primary-white};
    }

    .nav-link:hover {
        color: #{$primary-green};
    }

    .nav-link:active,
    .nav-link:focus {
        color: #{$primary-white};
    }

    .underline {
        text-decoration: underline !important;
        text-underline-offset: 0.15em;
    }

    .btn-outline-primary-white:focus {
        color: #{$primary-white};
    }

    .btn-outline-primary-white:hover {
        color: #{$dark-pink};
        background-color: #{$primary-white};
    }

    .btn-outline-primary-white:active {
        color: #{$medium-pink} !important;
        background-color: #{$primary-white} !important;
    }

    .bi-backpack2-fill {
        line-height: 1;
        background-color: transparent;
        border: none;
        color: #{$primary-white};
    }

    .bi-backpack2-fill:active,
    .bi-backpack2-fill:focus {
        color: #{$primary-green};
    }

    #navbar-nav {
        height: calc(100% - 60px);
        width: 100vw;
        top: 60px;
        background-color: #9F5E70;
        position: fixed;
        z-index: 3;
    }

    .slide-in {
        transform: translateY(0);
        transition: transform 0.3s ease-in-out;
    }

    .slide-out {
        transform: translateY(-130%);
        transition: transform 0.3s ease-in-out;
    }

    .parallax {
        height: calc(100% - 120px - 7rem) !important;
        box-sizing: border-box;
    }

    .parallax img {
        aspect-ratio: 1 /1;
        height: 40vh;
    }

    .parallax p {
        display: inline;
        font-size: 1.5rem;
        width: 50%;
    }

    .parallax .text {
        padding: 1rem;
    }

    .parallax * {
        display: flex;
        justify-content: center;
        -ms-overflow-style: none;
        /* IE and Edge Hide Scrollbar */
        scrollbar-width: none;
        /* Firefox Hide Scrollbar */
    }

    .parallax::-webkit-scrollbar {
        display: none;
    }

    .breadcrumbs {
        z-index: 3;
        height: min-content;
        position: relative;
        display: none;
    }

    .bc .btn{
        border-radius: 50%;
        height: 15px;
        width: 15px;
        background-color: #{$light-pink};
        border-color: #{$light-pink};
        z-index: 3;
        padding: 0;
    }

    .bc p {
        color: #{$light-pink};
    }

    .bc:hover .btn {
        background-color: #{$light-green} !important;
        border-color: #{$light-green} !important;
    }

    .bc:hover p {
        color: #{$light-green} !important;
    }

    .breadpath {
        position: absolute;
        height: 3px;
        top: 6px;
        left: 70px;
        width: 920px;
        background-color: #{$light-pink};
        z-index: 1;
    }

    .breadcrumb-progress {
        position: absolute;
        height: 3px;
        top: 6px;
        left: 70px;
        width: 0px;
        background-color: #{$primary-green};
        z-index: 2;
    }

    .reached .btn {
        background-color: #{$primary-green};
        border-color: #{$primary-green};
    }

    .reached p {
        color: #{$primary-green};
    }

    .avatar {
        position: relative;
        background-color: #{$primary-black};
        height: max(40vh, 50%) !important;
        z-index: 1;
    }

    // Make avatar parallax layer absolute for level up popup to animate relative to top of head
    .avatar>div:first-child {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .popup {
        position: absolute;
        z-index: 2;
        height: max(40vh, 50%);
        display: flex;
        justify-content: center;
    }

    .item {
        z-index: 2;
        max-height: max(40vh, 50%);
        display: flex;
        align-items: center;
    }

    .text {
        top: calc(max((40vh + 10px), ((100svh - 120px - 7rem) / 2) + 10px)) !important;
    }

    .text a,
    .text a:visited {
        display: inline;
        color: #{$primary-green};
    }

    .text a:hover {
        color: #{$light-green};
    }

    .text a:active {
        color: #{$primary-green};
    }

    .explore-grid {
        display: grid;
        grid-template: repeat(1, minmax(150px, auto)) / repeat(2, minmax(150px, auto));
        grid-gap: 10px;
        padding: 10px;
    }

    .explore-grid>div {
        text-align: center;
        z-index: 2;
    }

    .explore-grid p {
        width: 75%;
    }

    // v Scroll Prompt Animations v
    .fade-out {
        opacity: 0;
        transition: opacity 0.15s ease-out;
    }

    @keyframes bounce {

        0%,
        20%,
        50%,
        80%,
        100% {
            transform: translateY(0);
        }

        40% {
            transform: translateY(-5px);
        }

        60% {
            transform: translateY(-3px);
        }
    }

    .bouncing-text {
        display: inline-block;
        animation: bounce 2s infinite;
        position: absolute;
        bottom: 60px;
        color: #{$light-pink};
    }

    // ^ Scroll Prompt Animations ^

    .swiper {
        width: 100%;
        height: 100%;
    }

    .swiper-wrapper {
        max-height: 50svh;
    }

    .swiper-slide {
        text-align: center;
        font-size: 1.5rem;
        background: #{$medium-pink};
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 0.3rem;
    }

    .swiper-slide h2 {
        font-size: 1.5rem;
    }

    .swiper-slide h3 {
        font-size: 1rem;
    }

    .swiper-slide p {
        font-size: 1rem;
        margin-bottom: 0;
    }

    .swiper-pagination-bullet {
        background: #{$primary-green} !important;
    }

    .card-carousel {
        height: 50%;
        width: 50%;
    }

    .image-slide {
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center;
    }

    .image-slide div {
        background-color: rgba($dark-pink, 0.75);
    }

    .clickable-slide:hover {
        cursor: pointer;
        opacity: 70%;
    }

    .clickable-slide:active {
        opacity: 90%;
    }

    .subpage {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100%;
        width: 100%;
    }

    .subpage svg {
        vertical-align: top;
        margin-right: 0.5rem;
    }

    .subpage img {
        height: 300px;
        width: 300px;
    }

    .h-flip {
        transform: scaleX(-1);
    }

    .contact-text {
        font-size: 1.25rem;
        margin-bottom: 0;
        text-decoration: none;
    }

    .contact-text:hover {
        font-size: 1.25rem;
        margin-bottom: 0;
        text-decoration: underline;
    }

    .contact-text:active {
        font-size: 1.25rem;
        margin-bottom: 0;
        text-decoration: none;
    }

    @include media-breakpoint-down(md) {
        nav>.large-nav {
            display: none !important;
        }

        .parallax p {
            font-size: 1rem;
            width: 100%;
        }

        .explore-grid {
            display: grid;
            grid-template: repeat(1, minmax(150px, auto)) / repeat(2, minmax(150px, auto));
            grid-gap: 10px;
            padding: 10px;
        }

        .swiper-slide h2 {
            font-size: 1rem;
        }
    
        .swiper-slide h3 {
            font-size: 0.5rem;
        }
    
        .swiper-slide p {
            font-size: 0.5rem;
        }

        .contact-text {
            font-size: 1rem;
        }

        .subpage h1 {
            font-size: 1rem;
        }

        .subpage img {
            height: 100px;
            width: 100px;
        }
    }

    @include media-breakpoint-up(md) {
        nav>.bi-backpack2-fill {
            display: none !important;
        }

        #navbar-nav {
            display: none !important;
        }
    }

    // Change landing parallax to be side by side on xl and up screens and show breadcrumbs
    @include media-breakpoint-up(xl) {
        .avatar, .popup, .item {
            max-height: 100% !important;
            height: 100% !important;
        }

        .avatar {
            background-color: transparent !important;
        }

        // Art layers should be to the left
        .avatar>div:first-child {
            position: absolute;
            transform: translate(-150%, -50%);
        }

        .item > img {
            position: absolute !important;
            transform: translate(-100%, 0);
        }

        // Don't grow avatar too large if width is not much larger than height
        .parallax img {
            max-height: 30vw;
        }

        // Text layers should be justified to the right
        .parallax > .text {
            justify-content: end !important;
            top: 0% !important;
        }

        .text {
            z-index: 2;
        }
        
        .text p {
            position: absolute;
            top: 45%;
            padding: 0 5rem 0 5rem;
        }

        .breadcrumbs {
            display: flex;
            flex-direction: row;
        }
    }
}

// custom fonts
@import url('https://fonts.googleapis.com/css2?family=Kumar+One&family=Solway&display=swap');

$font-family-sans-serif: "Solway";
$headings-font-family: "Kumar One";
$input-btn-font-family: "Solway";
$form-text-font-style: "Kumar One";

// import bootstrap
@import "../node_modules/bootstrap/scss/bootstrap";